{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","intialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","classNmae","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.155e9f07.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n        Expense Tracker    \r\n        </h2>\r\n    )\r\n}","export default (state,action) => {\r\n    switch(action.type){\r\n        case 'DELETE_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n            case 'ADD_TRANSACTION' :\r\n                return{\r\n            transactions: [action.payload, ...state.transactions]\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\nconst intialState = {\r\n    transactions:[]\r\n}\r\n\r\n//create context\r\nexport const GlobalContext = createContext(intialState);\r\n\r\n//Provide components\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] =  useReducer(AppReducer , intialState);\r\n\r\n    //Action\r\n    function deleteTransaction(id){\r\n        dispatch({\r\n            type:'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type:'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (<GlobalContext.Provider value = {{\r\n        transactions:state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n        return (\r\n            <>\r\n                <h4>Your Balance</h4>\r\n                <h1>INR{total}</h1>\r\n            </>\r\n        )\r\n    }\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n  \r\nconst income = amounts\r\n  .filter(item => item > 0)\r\n  .reduce((acc, item) => (acc += item), 0)\r\n  .toFixed(2);\r\n\r\nconst expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1\r\n    ).toFixed(2);\r\n\r\n\r\n\r\n    return (\r\n            <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n    <p className=\"money plus\">{income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n    <p className=\"money minus\">{expense}</p>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React,{ useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const Transaction = ( {transaction} ) => {\r\n    const {deleteTransaction} =useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n             {transaction.text} <span>{sign}INR{Math.abs(transaction.amount)}</span><button\r\n             onClick={() => {deleteTransaction(transaction.id)}} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\nconst { transactions } = useContext(GlobalContext);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n          <ul className=\"list\">\r\n            {transactions.map(transaction => (<Transaction key={transaction.id} transaction = {transaction}/>))}\r\n          </ul>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const {addTransaction} =useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id:Math.floor(Math.random() * 10000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h3>Add new transaction</h3>\r\n            <form onSubmit = {onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                        <input type=\"text\" value={text} onChange={(e)=>setText(e.target.value)}\r\n                         placeholder=\"Enter text...\" />\r\n                </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Amount <br />\r\n            (negative - expense, positive - income)</label>\r\n            <input type=\"number\"  value={amount} onChange={(e)=>setAmount(e.target.value)}\r\n             placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Header } from './components/Header';\nimport './App.css';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n    <Header />\n    <div classNmae = \"conatainer\">\n      <Balance />\n      <IncomeExpenses />\n      <TransactionList />\n      <AddTransaction />\n      \n    </div>\n    </GlobalProvider>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}